#!/usr/bin/env python3\n# 🏃 CortexCrypto Neural Network Benchmark\n\nimport sys\nimport time\nimport random\nsys.path.append('..')\nfrom train_neural_network import CortexNeuralNetwork\n\ndef benchmark_neural_network():\n    print('🏃 CortexCrypto Neural Network Benchmark')\n    print('=' * 40)\n\n    # Load trained model\n    network = CortexNeuralNetwork()\n    network.load_model('cortex_neural_advanced.json')\n\n    # Benchmark different batch sizes\n    batch_sizes = [1, 10, 100, 1000]\n\n    for batch_size in batch_sizes:\n        inputs = [[random.random() for _ in range(49)] for _ in range(batch_size)]\n\n        start_time = time.time()\n        for inp in inputs:\n            output = network.forward(inp)\n        end_time = time.time()\n\n        total_time = (end_time - start_time) * 1000\n        per_inference = total_time / batch_size\n\n        print(f'Batch size {batch_size:4d}: {total_time:7.2f}ms total, {per_inference:6.2f}ms per inference')\n\n    print('\\n🏆 Benchmark complete!')\n\nif __name__ == '__main__':\n    benchmark_neural_network()\n